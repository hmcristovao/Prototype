/*  Wrapterms.jj  -  It wraps terms to SPARQL query */ 
options {
  DEBUG_PARSER = false;
  DEBUG_TOKEN_MANAGER = false;
  STATIC = false;
}
PARSER_BEGIN(Wrapterms)
package basic;

import java.io.*;
import myClasses.*; 

public class Wrapterms {
   public static void main(String args[])  throws ParseException  {
      Wrapterms firstParser = null;
	  MainProcess.head(firstParser);
   }
}
PARSER_END(Wrapterms)
TOKEN : {
      < CHARACTER:  ["a"-"z","A"-"Z","0"-"9","-","_"] > |
      < TERM:       < CHARACTER > 
                    (
                      ( < CHARACTER > | " " )*
                      < CHARACTER >
                    )?
      > |
      < SEPARATORS:  ( "\n" | "\r" | "," | ";" | "/" | " " )+ >
}
/* Grammar:
start   ->  ( element() )*  < EOF > 
element ->  < TERM > ( < SEPARATORS > )*
*/

void start(ListQuerySparql originalList) : {} 
{
   ( element(originalList) )* < EOF >
}
void element(ListQuerySparql originalList) : {Token token; Concept concept;}  
{
	token = < TERM >
    {		concept = new Concept(token);
		originalList.insert(concept);			
    }
    ( < SEPARATORS > )*
}

